
$chartName = 'zena'

# create a chart
helm create $chartName



# view the chart directory
ls .\$chartName



# view the templates directory
ls .\$chartName\templates



# remove all yaml files in the templates directory
rm .\$chartName\templates\*yaml



# generate deployment yaml
kubectl create deployment nginx `
--image=nginx `
--dry-run=client `
--output=yaml



# create a new deployment yaml file
kubectl create deployment nginx `
--image=nginx `
--dry-run=client `
--output=yaml > .\$chartName\templates\deployment.yaml



# create a deployment (in order to run the expose command below)
kubectl create deployment nginx --image=nginx



# generate services yaml
kubectl expose deployment nginx `
--type=LoadBalancer `
--port=80 `
--dry-run=client `
--output=yaml



# create a new services yaml file
kubectl expose deployment nginx `
--type=LoadBalancer `
--port=80 `
--dry-run=client `
--output=yaml > .\$chartName\templates\services.yaml


# delete the deployment
kubectl delete deployment nginx



# replace NOTES.txt file
rm .\$chartName\templates\NOTES.txt
echo 'A test Helm Chart' > .\$chartName\templates\NOTES.txt



# remove the charts and tests directory within the chart (they're not needed)
rm -r .\$chartName\charts
rm -r .\$chartName\templates\tests



# deploy the chart
helm install $chartName .\$chartName



###################################################################################################
###################################################################################################
# If you are running Powershell v5.1 and run into the following error: -
# 
# Error: unable to build kubernetes objects from release manifest: error parsing : 
# error converting YAML to JSON: yaml: invalid leading UTF-8 octet
#
# Tomica Kaniski posted a work around here: -
# https://blog.kaniski.eu/2020/09/having-fun-with-helm-and-file-encoding/
#
# If you then run into this error: -
# Error: unable to build kubernetes objects from release manifest: error validating "": 
# error validating data: apiVersion not set
#
# Check the version of Helm you are using. Upgrading to Helm v3.3.1 will fix this issue: -
# choco upgrade kubernetes-helm
###################################################################################################
###################################################################################################



# view release
helm list



# view kubernetes objects
kubectl get all



# delete the release
helm delete $chartName



# update the deployment yaml to use template directives
# copy {{ .Release.Name }} in for the deployment name



# also update the value.yaml file, removing the old file
rm .\$chartName\values.yaml



# and add in a custom value
echo 'containerImage: nginx:1.17' > .\$chartName\values.yaml


# update the deployment yaml to use the new default value
# copy {{ .Values.containerImage }} in for the container image name



# now redeploy the chart
helm install $chartName .\$chartName



# view release
helm list



# view kubernetes objects
kubectl get all



# view the container image in the deployment
kubectl get deployment -o jsonpath='{ .items[*].spec.template.spec.containers[*].image }'



# now upgrade the chart, overriding the image name in the values file
helm upgrade $chartName .\$chartName --set containerImage=nginx:1.18



# view the container image in the deployment
kubectl get deployment -o jsonpath='{ .items[*].spec.template.spec.containers[*].image }'



# package the chart
helm package .\$chartName --destination .



# view packaged chart
ls C:\Charts\
